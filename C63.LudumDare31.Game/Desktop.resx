<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAoAAAAHgCAMAAAACDyzWAAAABGdBTUEAALGPC/xhBQAAAwBQTFRFAAAA
        gAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALXPBAQAAAAlwSFlzAAAO
        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
</value>
  </data>
</root>